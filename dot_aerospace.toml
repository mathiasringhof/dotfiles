# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 8
inner.vertical = 8
outer.left = 5
outer.bottom = 5
outer.top = 5
outer.right = 5

[workspace-to-monitor-force-assignment]
5 = 'built-in'

[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
#                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
#                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
#            mam       sectionSign (ISO keyboards only, european keyboards only)
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut
# (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'focus --boundaries-action wrap-around-the-workspace dfs-next'

alt-a = 'mode active'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.active.binding]

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
period = ['layout tiles horizontal vertical', 'mode main']
comma = ['layout accordion horizontal vertical', 'mode main']
slash = ['layout "tiles"', 'mode main']
f = ['fullscreen', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
h = ['focus left', 'mode main']
j = ['focus down', 'mode main']
k = ['focus up', 'mode main']
l = ['focus right', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#move
shift-h = ['move left', 'mode main']
shift-j = ['move down', 'mode main']
shift-k = ['move up', 'mode main']
shift-l = ['move right', 'mode main']

alt-h = ['join-with left', 'mode main']
alt-j = ['join-with down', 'mode main']
alt-k = ['join-with up', 'mode main']
alt-l = ['join-with right', 'mode main']
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace

1 = ['workspace 1', 'mode main']
shift-1 = ['move-node-to-workspace 1', 'workspace 1', 'mode main']
2 = ['workspace 2', 'mode main']
shift-2 = ['move-node-to-workspace 2', 'workspace 2', 'mode main']
3 = ['workspace 3', 'mode main']
shift-3 = ['move-node-to-workspace 3', 'workspace 3', 'mode main']
4 = ['workspace 4', 'mode main']
shift-4 = ['move-node-to-workspace 4', 'workspace 4', 'mode main']
5 = ['workspace 5', 'mode main']
shift-5 = ['move-node-to-workspace 5', 'workspace 5', 'mode main']
a = ['workspace 1', 'mode main']
shift-a = ['move-node-to-workspace 1', 'workspace 1', 'mode main']
s = ['workspace 2', 'mode main']
shift-s = ['move-node-to-workspace 2', 'workspace 2', 'mode main']
d = ['workspace 3', 'mode main']
shift-d = ['move-node-to-workspace 3', 'workspace 3', 'mode main']
x = ['workspace 4', 'mode main']
shift-x = ['move-node-to-workspace 4', 'workspace 4', 'mode main']
c = ['workspace 5', 'mode main']
shift-c = ['move-node-to-workspace 5', 'workspace 5', 'mode main']

m = ['workspace M', 'mode main']
shift-m = ['move-node-to-workspace M', 'workspace M', 'mode main']
# n = ['workspace N', 'mode main']
# shift-n = ['move-node-to-workspace N', 'workspace N', 'mode main']
o = ['workspace O', 'mode main']
shift-o = ['move-node-to-workspace O', 'workspace O', 'mode main']
p = ['workspace P', 'mode main']
shift-p = ['move-node-to-workspace P', 'workspace P', 'mode main']
w = ['workspace W', 'mode main']
shift-w = ['move-node-to-workspace W', 'workspace W', 'mode main']
z = ['workspace Z', 'mode main']
shift-z = ['move-node-to-workspace Z', 'workspace Z', 'mode main']
r = ['workspace R', 'mode main']
shift-r = ['move-node-to-workspace R', 'workspace R', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
n = ['workspace-back-and-forth', 'mode main']
alt-a = ['workspace-back-and-forth', 'mode main']

semicolon = ['resize smart +50']
quote = ['resize smart -50']

esc = 'mode main'
q = 'mode main'
v = 'mode main'

# Check if Kitty is running. If yes, open a new window, if not start it.
enter = [
  '''exec-and-forget osascript -e '
on is_running(appName)
	tell application "System Events" to (name of processes) contains appName
end is_running

if not is_running("kitty") then
	tell application "kitty" to activate
else
	tell application "System Events" to tell process "kitty"
		click menu item "New OS Window" of menu 1 of menu bar item "Shell" of menu bar 1
	end tell
end if'
''',
  'mode main',
]
space = ['''exec-and-forget osascript -e '
on is_running(appName)
	tell application "System Events" to (name of processes) contains appName
end is_running

if not is_running("Safari") then
	tell application "Safari" to activate
else
	tell application "Safari"
		make new document
		activate
	end tell
end if'
''', 'mode main']
e = ['''exec-and-forget osascript -e '
  tell application "Finder"
    make new Finder window
    activate
  end tell'
''', 'mode main']
